blueprint:
  name: Speaker control
  domain: automation
  input:
    speaker_entity:
      name: Speaker Entity
    button_entity:
      name: Button Entity
mode: restart
trigger:
  - platform: state
    entity_id:
      - !input button_entity
    attribute: action
    not_to: ""
action:
  - choose:
    - conditions: "{{ trigger.to_state.state == 'toggle' }}"
      sequence:
        - service: media_player.toggle
          target:
            entity_id: !input speaker_entity
    - conditions: "{{ trigger.to_state.state == 'brightness_step_up' }}"
      sequence:
        - choose:
          - conditions: "{{ state_attr('!input speaker_entity', 'source') == 'WCX-50' }}"
            sequence:
              - service: media_player.select_source
                data:
                  source: Echo Dot
                target:
                  entity_id: !input speaker_entity
          - conditions: "{{ state_attr('!input speaker_entity', 'source') == 'Echo Dot' }}"
            sequence:
              - service: media_player.select_source
                data:
                  source: WCX-50
                target:
                  entity_id: !input speaker_entity
    - conditions: "{{ trigger.to_state.state == 'brightness_move_up' }}"
      sequence:
        - repeat:
            while: "{{ 0 == 0 }}"
            sequence:
              - service: media_player.volume_up
                target:
                  entity_id: !input speaker_entity
              - delay:
                  milliseconds: 200
    - conditions: "{{ trigger.to_state.state == 'brightness_move_down' }}"
      sequence:
        - repeat:
            while: "{{ 0 == 0 }}"
            sequence:
              - service: media_player.volume_down
                target:
                  entity_id: !input speaker_entity
              - delay:
                  milliseconds: 200
