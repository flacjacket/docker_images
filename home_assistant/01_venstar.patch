commit 3f3ed6c9f9338d24770d58730f5ecef9032a38d4
Author: Sean Vig <sean.v.775@gmail.com>
Date:   Mon Nov 29 22:57:22 2021 -0500

    Personal updates

diff --git a/homeassistant/components/venstar/__init__.py b/homeassistant/components/venstar/__init__.py
index 66a458f210..d83bb8187c 100644
--- a/homeassistant/components/venstar/__init__.py
+++ b/homeassistant/components/venstar/__init__.py
@@ -77,7 +77,7 @@ class VenstarDataUpdateCoordinator(update_coordinator.DataUpdateCoordinator):
             hass,
             _LOGGER,
             name=DOMAIN,
-            update_interval=timedelta(seconds=60),
+            update_interval=timedelta(seconds=10),
         )
         self.client = venstar_connection
         self.runtimes: list[dict[str, int]] = []
@@ -85,33 +85,12 @@ class VenstarDataUpdateCoordinator(update_coordinator.DataUpdateCoordinator):
     async def _async_update_data(self) -> None:
         """Update the state."""
         try:
-            await self.hass.async_add_executor_job(self.client.update_info)
+            await self.hass.async_add_executor_job(self.client.update)
         except (OSError, RequestException) as ex:
             raise update_coordinator.UpdateFailed(
-                f"Exception during Venstar info update: {ex}"
+                f"Exception during Venstar update: {ex}"
             ) from ex
 
-        # older venstars sometimes cannot handle rapid sequential connections
-        await asyncio.sleep(VENSTAR_SLEEP)
-
-        try:
-            await self.hass.async_add_executor_job(self.client.update_sensors)
-        except (OSError, RequestException) as ex:
-            raise update_coordinator.UpdateFailed(
-                f"Exception during Venstar sensor update: {ex}"
-            ) from ex
-
-        # older venstars sometimes cannot handle rapid sequential connections
-        await asyncio.sleep(VENSTAR_SLEEP)
-
-        try:
-            await self.hass.async_add_executor_job(self.client.update_alerts)
-        except (OSError, RequestException) as ex:
-            raise update_coordinator.UpdateFailed(
-                f"Exception during Venstar alert update: {ex}"
-            ) from ex
-
-        # older venstars sometimes cannot handle rapid sequential connections
         await asyncio.sleep(VENSTAR_SLEEP)
 
         try:
@@ -123,8 +102,6 @@ class VenstarDataUpdateCoordinator(update_coordinator.DataUpdateCoordinator):
                 f"Exception during Venstar runtime update: {ex}"
             ) from ex
 
-        return None
-
 
 class VenstarEntity(CoordinatorEntity):
     """Representation of a Venstar entity."""
