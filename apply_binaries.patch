--- Linux_for_Tegra/apply_binaries.sh	2019-09-25 23:31:40.659829299 -0400
+++ Linux_for_Tegra/apply_binaries.sh	2019-09-25 23:40:23.903457450 -0400
@@ -207,24 +207,6 @@
 	tar -I lbzip2 -xpmf ${LDK_NV_TEGRA_DIR}/nv_sample_apps/nvgstapps.tbz2
 	popd > /dev/null 2>&1
 
-	echo "Extracting Weston to ${LDK_ROOTFS_DIR}"
-	pushd "${LDK_ROOTFS_DIR}" > /dev/null 2>&1
-	tar -I lbzip2 -xpmf "${LDK_NV_TEGRA_DIR}/weston.tbz2"
-	popd > /dev/null 2>&1
-
-	echo "Extracting the configuration files for the supplied root filesystem to ${LDK_ROOTFS_DIR}"
-	pushd "${LDK_ROOTFS_DIR}" > /dev/null 2>&1
-	tar -I lbzip2 -xpmf ${LDK_NV_TEGRA_DIR}/config.tbz2
-	popd > /dev/null 2>&1
-
-	echo "Extracting graphics_demos to ${LDK_ROOTFS_DIR}"
-	pushd "${LDK_ROOTFS_DIR}" > /dev/null 2>&1
-	tar -I lbzip2 -xpmf "${LDK_NV_TEGRA_DIR}/graphics_demos.tbz2"
-	popd > /dev/null 2>&1
-
-	echo "Extracting the firmwares and kernel modules to ${LDK_ROOTFS_DIR}"
-	( cd "${LDK_ROOTFS_DIR}" ; tar -I lbzip2 -xpmf "${LDK_KERN_DIR}/kernel_supplements.tbz2" )
-
 	echo "Extracting the kernel headers to ${LDK_ROOTFS_DIR}/usr/src"
 	# The kernel headers package can be used on the target device as well as on another host.
 	# When used on the target, it should go into /usr/src and owned by root.
@@ -249,20 +231,6 @@
 		[ ! -h "${KERNEL_MODULES_DIR}/build" ] && ln -s "/usr/src/${KERNEL_HEADERS_A64_DIR}/${KERNEL_SUBDIR}" "${KERNEL_MODULES_DIR}/build"
 	fi
 	popd > /dev/null
-
-	if [ -e "${LDK_KERN_DIR}/zImage" ]; then
-		echo "Installing zImage into /boot in target rootfs"
-		install --owner=root --group=root --mode=644 -D "${LDK_KERN_DIR}/zImage" "${LDK_ROOTFS_DIR}/boot/zImage"
-	fi
-
-	if [ -e "${LDK_KERN_DIR}/Image" ]; then
-		echo "Installing Image into /boot in target rootfs"
-		install --owner=root --group=root --mode=644 -D "${LDK_KERN_DIR}/Image" "${LDK_ROOTFS_DIR}/boot/Image"
-	fi
-
-	echo "Installing the board *.dtb files into /boot in target rootfs"
-	install -o 0 -g 0 -m 0755 -d "${LDK_ROOTFS_DIR}"/boot
-	cp -a "${LDK_KERN_DIR}"/dtb/*.dtb "${LDK_ROOTFS_DIR}/boot"
 fi
 
 echo "Creating a symbolic link nvgstplayer pointing to nvgstplayer-1.0"
@@ -329,195 +297,10 @@
 ln -sf "../../../${ARM_ABI_DIR_ABS}/tegra/nvidia_icd.json" "nvidia_icd.json"
 popd > /dev/null
 
-sudo mkdir -p "${LIBGLVND_EGL_VENDOR_DIR}"
+mkdir -p "${LIBGLVND_EGL_VENDOR_DIR}"
 echo "Adding symlink nvidia.json --> /usr/share/glvnd/egl_vendor.d/10_nvidia.json in target rootfs"
 pushd "${LIBGLVND_EGL_VENDOR_DIR}" > /dev/null 2>&1
-sudo ln -sf "../../../../${ARM_ABI_DIR_ABS}/tegra-egl/nvidia.json" "10_nvidia.json"
-popd > /dev/null
-
-echo "Creating symlinks for weston, wayland-demos, libinput and wayland-ivi-extention modules"
-install -o 0 -g 0 -m 0755 -d "${ARM_ABI_DIR}/weston/"
-pushd "${ARM_ABI_DIR}/weston/" > /dev/null 2>&1
-if [ -e "../tegra/weston/desktop-shell.so" ]; then
-	ln -sf "../tegra/weston/desktop-shell.so" "desktop-shell.so"
-fi
-
-if [ -e "../tegra/weston/gl-renderer.so" ]; then
-	ln -sf "../tegra/weston/gl-renderer.so" "gl-renderer.so"
-fi
-
-if [ -e "../tegra/weston/drm-backend.so" ]; then
-	ln -sf "../tegra/weston/drm-backend.so" "drm-backend.so"
-fi
-
-if [ -e "../tegra/weston/eglstream-backend.so" ]; then
-	ln -sf "../tegra/weston/eglstream-backend.so" "eglstream-backend.so"
-fi
-
-if [ -e "../tegra/weston/hmi-controller.so" ]; then
-	ln -sf "../tegra/weston/hmi-controller.so" "hmi-controller.so"
-fi
-
-if [ -e "../tegra/weston/ivi-controller.so" ]; then
-	ln -sf "../tegra/weston/ivi-controller.so" "ivi-controller.so"
-fi
-
-if [ -e "../tegra/weston/ivi-shell.so" ]; then
-	ln -sf "../tegra/weston/ivi-shell.so" "ivi-shell.so"
-fi
-
-if [ -e "../tegra/weston/wayland-backend.so" ]; then
-	ln -sf "../tegra/weston/wayland-backend.so" "wayland-backend.so"
-fi
-
-popd > /dev/null
-
-pushd "${ARM_ABI_DIR}" > /dev/null 2>&1
-if [ -e "tegra/weston/libilmClient.so.2.0.0" ]; then
-	ln -sf "tegra/weston/libilmClient.so.2.0.0" "libilmClient.so.2.0.0"
-fi
-
-if [ -e "tegra/weston/libilmCommon.so.2.0.0" ]; then
-	ln -sf "tegra/weston/libilmCommon.so.2.0.0" "libilmCommon.so.2.0.0"
-fi
-
-if [ -e "tegra/weston/libilmControl.so.2.0.0" ]; then
-	ln -sf "tegra/weston/libilmControl.so.2.0.0" "libilmControl.so.2.0.0"
-fi
-
-if [ -e "tegra/weston/libilmInput.so.2.0.0" ]; then
-	ln -sf "tegra/weston/libilmInput.so.2.0.0" "libilmInput.so.2.0.0"
-fi
-
-if [ -e "tegra/weston/libinput.so.10.10.1" ]; then
-	ln -sf "tegra/weston/libinput.so.10.10.1" "libinput.so.10.10.1"
-fi
-popd > /dev/null
-
-install -o 0 -g 0 -m 0755 -d "${LDK_ROOTFS_DIR}/usr/lib/weston"
-pushd "${LDK_ROOTFS_DIR}/usr/lib/weston" > /dev/null 2>&1
-if [ -e "../../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-desktop-shell" ]; then
-	ln -sf "../../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-desktop-shell" "weston-desktop-shell"
-fi
-
-if [ -e "../../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-keyboard" ]; then
-	ln -sf "../../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-keyboard" "weston-keyboard"
-fi
-
-if [ -e "../../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-screenshooter" ]; then
-	ln -sf "../../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-screenshooter" "weston-screenshooter"
-fi
-popd > /dev/null
-
-pushd "${LDK_ROOTFS_DIR}/usr/bin/" > /dev/null 2>&1
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/EGLWLInputEventExample" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/EGLWLInputEventExample" "EGLWLInputEventExample"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/EGLWLMockNavigation" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/EGLWLMockNavigation" "EGLWLMockNavigation"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/LayerManagerControl" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/LayerManagerControl" "LayerManagerControl"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/spring-tool" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/spring-tool" "spring-tool"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston" "weston"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-calibrator" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-calibrator" "weston-calibrator"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-clickdot" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-clickdot" "weston-clickdot"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-cliptest" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-cliptest" "weston-cliptest"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-dnd" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-dnd" "weston-dnd"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-eventdemo" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-eventdemo" "weston-eventdemo"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-flower" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-flower" "weston-flower"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-fullscreen" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-fullscreen" "weston-fullscreen"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-image" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-image" "weston-image"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-info" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-info" "weston-info"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-ivi-shell-user-interface" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-ivi-shell-user-interface" "weston-ivi-shell-user-interface"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-launch" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-launch" "weston-launch"
-	chmod "+s" "weston-launch"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-multi-resource" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-multi-resource" "weston-multi-resource"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-resizor" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-resizor" "weston-resizor"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-scaler" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-scaler" "weston-scaler"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-simple-egl" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-simple-egl" "weston-simple-egl"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-simple-shm" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-simple-shm" "weston-simple-shm"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-simple-touch" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-simple-touch" "weston-simple-touch"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-smoke" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-smoke" "weston-smoke"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-stacking" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-stacking" "weston-stacking"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-subsurfaces" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-subsurfaces" "weston-subsurfaces"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-terminal" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-terminal" "weston-terminal"
-fi
-
-if [ -e "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-transformed" ]; then
-	ln -sf "../../${ARM_ABI_DIR_ABS}/tegra/weston/weston-transformed" "weston-transformed"
-fi
+ln -sf "../../../../${ARM_ABI_DIR_ABS}/tegra-egl/nvidia.json" "10_nvidia.json"
 popd > /dev/null
 
 if [ -e "${ARM_ABI_DIR}/libglfw.so.3.3" ]; then
@@ -529,93 +312,6 @@
 	popd > /dev/null
 fi
 
-if [ -e "${LDK_ROOTFS_DIR}/usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf" ]; then
-	pushd "${LDK_ROOTFS_DIR}/etc/systemd/system/multi-user.target.wants" > /dev/null 2>&1
-	if [ -f ${LDK_ROOTFS_DIR}/etc/systemd/system/nvpmodel.service ]; then
-		ln -sf "../nvpmodel.service" "nvpmodel.service"
-	fi
-	popd > /dev/null
-fi
-
-echo "Adding symlinks for NVIDIA systemd services"
-install -o 0 -g 0 -m 0755 -d "${LDK_ROOTFS_DIR}/etc/systemd/system/multi-user.target.wants"
-pushd "${LDK_ROOTFS_DIR}/etc/systemd/system/multi-user.target.wants" > /dev/null 2>&1
-ln -sf "/opt/nvidia/l4t-usb-device-mode/nv-l4t-usb-device-mode.service" "nv-l4t-usb-device-mode.service"
-if [ -f "${LDK_ROOTFS_DIR}/opt/nvidia/l4t-bootloader-config/nv-l4t-bootloader-config.service" ]; then
-	ln -sf "/opt/nvidia/l4t-bootloader-config/nv-l4t-bootloader-config.service" "nv-l4t-bootloader-config.service"
-fi
-if [ -h "isc-dhcp-server.service" ]; then
-	rm -f "isc-dhcp-server.service"
-fi
-if [ -h "isc-dhcp-server6.service" ]; then
-	rm -f "isc-dhcp-server6.service"
-fi
-ln -sf "../nvargus-daemon.service" "nvargus-daemon.service"
-ln -sf "../nvs-service.service" "nvs-service.service"
-ln -sf "../nvfb.service" "nvfb.service"
-ln -sf "../nvfb-early.service" "nvfb-early.service"
-ln -sf "../nv.service" "nv.service"
-if [ -f "../nv_update_verifier.service" ]; then
-	ln -sf "../nv_update_verifier.service" "nv_update_verifier.service"
-fi
-ln -sf "../nvphs.service" "nvphs.service"
-if [ -f "../nvresizefs.service" ]; then
-	ln -sf "../nvresizefs.service" "nvresizefs.service"
-fi
-if [ -f "../nvuser.service" ]; then
-	ln -sf "../nvuser.service" "nvuser.service"
-fi
-if [ -f "../nvgetty.service" ]; then
-	ln -sf "../nvgetty.service" "nvgetty.service"
-fi
-if [ -f "../nvmemwarning.service" ]; then
-	ln -sf "../nvmemwarning.service" "nvmemwarning.service"
-fi
-if [ -f "../nvweston.service" ]; then
-	ln -sf "../nvweston.service" "nvweston.service"
-fi
-if [ -f "../nvzramconfig.service" ]; then
-	ln -sf "../nvzramconfig.service" "nvzramconfig.service"
-fi
-popd > /dev/null
-install -o 0 -g 0 -m 0755 -d "${LDK_ROOTFS_DIR}/etc/systemd/system/getty.target.wants"
-pushd "${LDK_ROOTFS_DIR}/etc/systemd/system/getty.target.wants" > /dev/null 2>&1
-ln -sf "/lib/systemd/system/serial-getty@.service" "serial-getty@ttyGS0.service"
-popd > /dev/null
-pushd "${LDK_ROOTFS_DIR}/etc/systemd/system" > /dev/null 2>&1
-ln -sf "/opt/nvidia/l4t-usb-device-mode/nv-l4t-usb-device-mode.service" "nv-l4t-usb-device-mode.service"
-ln -sf "/opt/nvidia/l4t-usb-device-mode/nv-l4t-usb-device-mode-runtime.service" "nv-l4t-usb-device-mode-runtime.service"
-popd > /dev/null
-
-
-# Enable Unity by default for better user experience [2332219]
-echo "Rename ubuntu.desktop --> ux-ubuntu.desktop"
-if [ -d "${LDK_ROOTFS_DIR}/usr/share/xsessions" ]; then
-	pushd "${LDK_ROOTFS_DIR}/usr/share/xsessions" > /dev/null 2>&1
-	if [ -f "ubuntu.desktop" ]; then
-		mv "ubuntu.desktop" "ux-ubuntu.desktop"
-	fi
-	popd > /dev/null
-fi
-
-if [ -e "${LDK_ROOTFS_DIR}/usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf" ]; then
-	ReplaceText "${LDK_ROOTFS_DIR}/usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf" \
-			"autologin-user=ubuntu" "autologin-user=nvidia";
-	if [ -e "${LDK_ROOTFS_DIR}/etc/systemd/system/serial-getty@ttyS0.service.d/autologin.conf" ]; then
-		ReplaceText "${LDK_ROOTFS_DIR}/etc/systemd/system/serial-getty@ttyS0.service.d/autologin.conf" \
-			"ubuntu" "nvidia";
-	fi
-
-	if [ -e "${LDK_ROOTFS_DIR}/etc/systemd/system/serial-getty@ttyTCU0.service.d/autologin.conf" ]; then
-		ReplaceText "${LDK_ROOTFS_DIR}/etc/systemd/system/serial-getty@ttyTCU0.service.d/autologin.conf" \
-			"ubuntu" "nvidia";
-	fi
-
-	grep -q -F 'allow-guest=false' \
-		"${LDK_ROOTFS_DIR}/usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf" \
-		|| echo 'allow-guest=false' \
-		>> "${LDK_ROOTFS_DIR}/usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf"
-fi
 
 # test if installation comes with systemd-gpt-auto-generator. If so, disable it
 # this is a WAR for https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1783994
@@ -629,23 +325,12 @@
 	ln -sf /dev/null "${LDK_ROOTFS_DIR}/etc/systemd/system-generators/systemd-gpt-auto-generator"
 fi
 
-echo "Copying USB device mode filesystem image to ${LDK_ROOTFS_DIR}"
-install -o 0 -g 0 -m 0755 -d "${LDK_ROOTFS_DIR}/opt/nvidia/l4t-usb-device-mode"
-cp "${LDK_NV_TEGRA_DIR}/l4t-usb-device-mode-filesystem.img" "${LDK_ROOTFS_DIR}/opt/nvidia/l4t-usb-device-mode/filesystem.img"
-
 # Disabling NetworkManager-wait-online.service for Bug 200290321
 echo "Disabling NetworkManager-wait-online.service"
 if [ -h "${LDK_ROOTFS_DIR}/etc/systemd/system/network-online.target.wants/NetworkManager-wait-online.service" ]; then
 	rm "${LDK_ROOTFS_DIR}/etc/systemd/system/network-online.target.wants/NetworkManager-wait-online.service"
 fi
 
-echo "Disable the ondemand service by changing the runlevels to 'K'"
-for file in "${LDK_ROOTFS_DIR}"/etc/rc[0-9].d/; do
-	if [ -f "${file}"/S*ondemand ]; then
-		mv "${file}"/S*ondemand "${file}/K01ondemand"
-	fi
-done
-
 # Remove the spawning of ondemand service
 if [ -h "${LDK_ROOTFS_DIR}/etc/systemd/system/multi-user.target.wants/ondemand.service" ]; then
 	rm -f "${LDK_ROOTFS_DIR}/etc/systemd/system/multi-user.target.wants/ondemand.service"
